plugins {
    id 'com.android.application'
    id 'kotlin-android'
    alias(libs.plugins.ksp)
    id "org.jetbrains.kotlin.plugin.serialization"
    id "io.realm.kotlin"
    id("de.jensklingenberg.ktorfit")
    alias(libs.plugins.kotlin.compose)
}

android {
    compileSdk 36
    lintOptions {
        warningsAsErrors true
        abortOnError true
        disable 'MissingTranslation',
                'ExtraTranslation',
                'TypographyEllipsis',
                'UnspecifiedImmutableFlag',
                'UnusedResources',
                'TypographyDashes'
    }

    buildFeatures {
        viewBinding true
        buildConfig true
        compose true
        flavorDimensions = ["product_code"]
    }

    namespace 'rooit.me.xo'
    defaultConfig {
        applicationId "rooit.me.xo.app"
        minSdk 21
        targetSdk 36
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "BASE_URL", "\"https://newsapi.org/\"")
        buildConfigField("String", "API_KEY", "\"f53a2c1085bd4e19859f4f3b07f2babf\"")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            matchingFallbacks = ['release', 'debug']
            minifyEnabled false
            shrinkResources false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-system-common.pro', 'proguard-third-party.pro', 'proguard-module.pro'
        }
        release {
            matchingFallbacks = ['release', 'debug']
            minifyEnabled false
            shrinkResources false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

//    flavorDimensions "product_code"//move to buildFeatures
    productFlavors {
        legacy_nav {
            getIsDefault().set(true)
            dimension "product_code"
            dependencies {
                implementation libs.androidx.fragment.ktx
                implementation libs.material
                implementation libs.androidx.constraintlayout
                implementation libs.androidx.navigation.fragment.ktx
                implementation libs.splashscreen
                implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01")
                implementation libs.glide
                ksp libs.glide.ksp
                implementation libs.koin.android
            }
        }

        cmp_kmp {
            dimension "product_code"
            dependencies {
                implementation(libs.androidx.lifecycle.runtime.ktx)
                implementation(libs.androidx.lifecycle.runtime.compose)

                implementation(libs.androidx.activity.compose)
                implementation(platform(libs.androidx.compose.bom))
                implementation(libs.androidx.compose.ui)
                implementation(libs.androidx.compose.ui.graphics)
                implementation(libs.androidx.compose.ui.tooling.preview)
                implementation(libs.androidx.compose.foundation)

                implementation(libs.androidx.compose.material)
                implementation(libs.androidx.compose.material3)
                implementation(libs.androidx.navigation.compose)

                implementation(libs.koin.androidx.compose)
                implementation(libs.koin.androidx.compose.navigation)
                implementation(libs.koin.compose)
                implementation(libs.koin.compose.viewmodel)
                implementation(libs.koin.compose.viewmodel.navigation)

                implementation(libs.coil.core)
                implementation(libs.coil)
                implementation(libs.coil.compose)
                implementation(libs.coil.compose.core)
                implementation(libs.coil.network.ktor3)
                implementation(libs.coil.svg)
            }
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
        legacy_nav {
            java.srcDirs = ['src/legacy_nav/java']
            res.srcDirs = ['src/legacy_nav/res']
            manifest.srcFile 'src/legacy_nav/AndroidManifest.xml'
        }
        cmp_kmp {
            java.srcDirs = ['src/cmp_kmp/java']
            res.srcDirs = ['src/cmp_kmp/res']
            manifest.srcFile 'src/cmp_kmp/AndroidManifest.xml'
        }
    }
}

dependencies {
    implementation libs.kotlinx.serialization
    implementation libs.kotlinx.serialization.json
    implementation libs.kotlinx.coroutines


    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.activity.ktx

    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx

    implementation libs.androidx.navigation.ui.ktx
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.splashscreen
    implementation("androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01")

    implementation libs.timber

    implementation libs.koin.core

    implementation(libs.ktor.client.cio)
    implementation(libs.ktor.client.json)
    implementation(libs.ktor.client.logging)
    implementation(libs.ktor.client.serialization)
    implementation(libs.ktor.client.content.negotiation)
    implementation(libs.ktor.serialization.json)

    implementation(libs.de.ktorfit)
    implementation(libs.de.ktorfit.converters.call)
    implementation(libs.de.ktorfit.converters.flow)
    implementation libs.glide
    ksp libs.glide.ksp

    implementation (libs.urlencoder.lib)

    implementation libs.realm.kotlin.base
//    implementation libs.realm.kotlin.sync

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
}