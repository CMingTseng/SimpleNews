import org.gradle.util.internal.VersionNumber

buildscript {
    ext {
        //Ref : https://developer.android.com/build/releases/past-releases
        agp_gradle = libs.versions.agp.get()
        kotlin_version = "1.9.25"
        println "Show  kotlin_version  : ${kotlin_version}"
        kotlin_version = libs.versions.kotlin.get()
        println "Show  kotlin_version from lib.version.toml  : ${kotlin_version}"

        // coroutine
        coroutine_version = "1.6.4"

//        koin_version = libs.versions.koin.get()
        //DB : Room
        room_version = "2.3.0"
//        realm_version =  libs.versions.realm.get()
        jb_compose_version = libs.versions.jetbrains.compose.multiplatform.get()

        navigation_version = libs.versions.androidx.navigation.get()

        realm_kotlin= libs.versions.realm.kotlin.version.get()
        compileSdkVersion = 31
        compileSdk = compileSdkVersion
        targetSdkVersion = compileSdk
        targetSdk = targetSdkVersion
        minSdkVersion = 21
        minSdk = minSdkVersion
    }
    println "Show  fianl kotlin_version  : ${kotlin_version}"
    def kotlin = ext.get("kotlin.version")
    println "Show  kotlin_version from gradle.properties : ${kotlin}"

    repositories {
        gradlePluginPortal()
        mavenCentral()
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url = uri('https://maven.pkg.jetbrains.space/public/p/compose/dev')
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$agp_gradle"
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigation_version"
//        classpath "${libs.plugins.realm.get()}"
//        classpath "io.realm.kotlin:gradle-plugin:$realm_kotlin"
    }
}

//Ref : https://stackoverflow.com/questions/37555196/in-gradle-how-to-use-a-variable-for-a-plugin-version

plugins {
//    alias(libs.plugins.android.application) apply false
//    alias(libs.plugins.android.library) apply false
//    alias(libs.plugins.android.kotlin.multiplatform.library) apply false
    id "org.jetbrains.kotlin.jvm" version "${kotlin_version}" apply false
    id 'org.jetbrains.kotlin.android' version "${kotlin_version}" apply false
    alias(libs.plugins.android.kotlin.multiplatform.library) apply false
    //apply plugin: "org.jetbrains.kotlin.jvm"
    id "org.jetbrains.kotlin.multiplatform" version "${kotlin_version}" apply false
    //apply plugin: "org.jetbrains.kotlin.multiplatform"
    id "org.jetbrains.kotlin.plugin.serialization" version "${kotlin_version}" apply false
    //apply plugin: "org.jetbrains.kotlin.plugin.serialization"
    id "org.jetbrains.compose" version "${jb_compose_version}" apply false
    alias(libs.plugins.ksp) apply false
    alias(libs.plugins.de.ktorfit)
    //    id 'io.realm.kotlin' version "${realm_kotlin}" apply false
    alias(libs.plugins.room) apply false
}

allprojects {
    //https://www.baeldung.com/java-comparing-versions
    println "Show  current define room version  : ${room_version}"
    def room_version = VersionNumber.parse(room_version)
    def target_room_version = VersionNumber.parse("2.4.0-alpha03")
    println "Show  current define room ver  : ${room_version.minor}"
    println "Show  target_room_version  : ${target_room_version.minor}"
    println "Show  compareTo  : ${room_version.compareTo(target_room_version)}"
}


task clean(type: Delete) {
    delete rootProject.buildDir
}